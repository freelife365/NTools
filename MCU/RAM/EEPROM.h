/******************************************************************************
-- 单片机相关的定义 
-- 
--	
--	xu
-- 2013-06-01
*******************************************************************************/
#ifndef __EEPROM_H__
#define __EEPROM_H__

#include "..\MCUDefine.h"
// EEPROM类型
/*********************************************************************
-- STC89C5x系列单片机内部EEPROM寄存器引用
-- 晶振频率为11.0592MHz，单位毫秒级。
-- xu
-- 2013-06-08
**********************************************************************/ 
sfr ISP_DATA	= 0xE2;		// 读取或要存入的数据保存出
sfr ISP_ADDRH	= 0xE3;		// 地址寄存器高八位
sfr ISP_ADDRL	= 0xE4;		// 地址寄存器低八位
sfr ISP_CMD		= 0xE5;		// 命令模式寄存器；0 待机模式，1 字节读，2 字节编程，3 扇区擦除
sfr ISP_TRIG	= 0xE6;		// 命令触发寄存器
sfr ISP_CONTR	= 0xE7;		// 控制寄存器
sfr WDT_CONTR  	= 0xE1;		// 
// 命令模式
#define ISP_BYTE_READ		1	// ISP字节读
#define ISP_BYTE_PROGRAM	2	// ISP字节编程
#define ISP_SECTOR_ERASE	3	// ISP扇区擦除
// 定义Data EEPROM操作等待时间
#ifdef MCU_CLOCK_11MHZ
	#define ISP_WAIT_TIME	0x02
#endif
#ifdef MCU_CLOCK_22MHZ
	#define ISP_WAIT_TIME	0x01
#endif
#ifdef MCU_CLOCK_40MHZ
	#define ISP_WAIT_TIME	0x00
#endif
// 扇区大小
#define SIZE_OF_SECTOR		512
/*********************************************************************
-- 功能：STC89C5x系列单片机内部EEPROM扇区擦除
-- 参数：
-- 		Address：EEPROM擦除扇区的地址
-- xu；2013-06-08
**********************************************************************/
void ISP_Erase(UINT address);   
/*********************************************************************
-- 功能：读取STC89C5x系列单片机内部EEPROM的字节数据
-- 参数：
-- 		Address：被EEPROM的地址
-- 		返回值：读取的数据
-- xu；2013-06-08
**********************************************************************/
BYTE ISP_Read(UINT address);
/*********************************************************************
-- 功能：对STC89C5x系列单片机内部EEPROM进行编程
-- 参数：
-- 		Address：编程地址
--		data：编程的值
-- xu；2013-06-08
**********************************************************************/
void ISP_Write(UINT address, BYTE edata);

/*********************************************************************
-- 功能：对STC89C5x系列单片机内部EEPROM进行编程并验证
-- 参数：address = 写入的地址
--		 edata = 写入的值
-- 返回：成功=MCU_OK,失败=MCU_ERROR
-- 描述：xu,2013-06-10
**********************************************************************/
BYTE ISP_WriteVerify(UINT address, BYTE edata);
/*********************************************************************
-- 功能：向指定地址开始处连续写字节数组并验证，不允许跨扇区操作
-- 参数：address = 写入数据的起始地址
--		 pvalue = 写入的值数组
--		 len = 值数组长度
-- 返回：成功=MCU_OK,失败=MCU_ERROR
-- 描述：xu,2013-06-10
**********************************************************************/
BOOL ISP_Writes(UINT address, BYTE *pvalue, UINT len);
/*********************************************************************
-- 功能：从指定地址开始处连续读取数据，不允许跨扇区操作
-- 参数：address = 读取数据的起始地址
--		 pbuf = 保存数据缓存区
--		 buflen = 数据缓存区长度
-- 返回：成功=MCU_OK,失败=MCU_ERROR
-- 描述：xu,2013-06-10
**********************************************************************/
BOOL ISP_Reads(UINT address, BYTE *pbuf, UINT buflen);
#endif